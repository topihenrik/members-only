const async = require("async");
const Message = require("../models/message");
const { body,validationResult } = require('express-validator');


exports.home_get = (req, res, next) => {
    Message.find().sort([["timestamp", "ascending"]]).populate("author").exec((err, list_messages) => {
        if (err) return next(err);
        res.render("index", {title: "Home page", list_message: list_messages});
    })
}



exports.new_message_get = (req, res, next) => {
    res.render("newmessage", {title: "Create a new message"});
}

exports.new_message_post = [
    body("title", "Title must be specified").trim().isLength({min:1}).escape(),
    body("content", "Message must be specified").trim().isLength({min:1}).escape(),

    (req, res, next) => {
        const errors = validationResult(req);

        if (!errors.isEmpty()) {
            // Errors -> Rerender
            res.render("newmessage", {title: "Create a new message", errors: errors.array()})
        } else {
            // Data is valid.

            var message = new Message(
                {
                    title: req.body.title,
                    content: req.body.content,
                    timestamp: Date.now(),
                    author: req.user._id
                }
            )

            message.save((err) => {
                if (err) return next(err);
                res.redirect("/");
            })
        }
    }
]

exports.del_message_post = (req, res, next) => {
    if (req.user.admin == false) {
        const err = new Error("No authorization to delete messages.")
        err.status = 401;
        return next(err);
    }

    Message.findByIdAndRemove(req.body.messageid, function deleteMessage(err) {
        if (err) return next(err);
        res.redirect("/");
    })
}