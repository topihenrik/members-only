const async = require("async");
const bcrypt = require("bcryptjs");
const passport = require("passport");
const User = require("../models/user");
const { body,validationResult } = require('express-validator');



exports.signup_get = (req, res, next) => {
    res.render("signup", {title: "Sign Up Form"});
}


exports.signup_post = [
    body("first_name", "First Name must be specified.").trim().isLength({min:1}).escape().isAlphanumeric(),
    body("last_name", "Last Name must be specified").trim().isLength({min:1}).escape().isAlphanumeric(),
    body("email", "Email must be specified").trim().isEmail(),
    body("password", "Password must be specified")
    .custom((value, {req, loc, path}) => {
        if (value !== req.body.password_confirm) {
            throw new Error("Passwords don't match");
        } else {
            return value;
        }
    }),

    (req, res, next) => {
        const errors = validationResult(req);

        if(!errors.isEmpty()) {
            // Errrors. Rerender the form view.
            res.render("signup", {title: "Sign Up Form", errors: errors.array()})
        } else {
            // Form data is valid.

            bcrypt.hash(req.body.password, 10, (err, hashedPassword) => {
                if (err) return next(err);

                const user = new User(
                    {
                        first_name: req.body.first_name,
                        last_name: req.body.last_name,
                        email: req.body.email,
                        password: hashedPassword,
                        member_status: "guest"
                    }
                )
    
                user.save(function(err) {
                    if (err) return next(err);
                    res.redirect("/");
                })
            })

            
        }
    }

]


exports.login_get = (req, res, next) => {
    res.render("login", {title: "Log In Form"});
}

exports.login_post = passport.authenticate("local", {
    successRedirect: "/",
    failureRedirect: "/"
})

exports.logout_get = (req, res, next) => {
    req.logout((err) => {
        if (err) return next(err);
        res.redirect("/");
    })
}


exports.joinclub_get = (req, res, next) => {
    res.render("joinclub", {title: "Join the Club"})
}

exports.joinclub_post = [
    body("passphrase", "Invalid passphrase.").equals("secret high fives"),

    (req, res, next) => {
        const errors = validationResult(req);

        if (!errors.isEmpty()) {
            // Errors. Rerender.
            res.render("joinclub", {title: "Join the Club", errors: errors.array()})
        } else {
            // Passphrase was correct.
            User.findByIdAndUpdate(req.user._id, {$set: {member_status: "member"}}, {}, (err, theuser) => {
                if (err) return next(err);
                res.redirect("/");
            })
        }

    }
]